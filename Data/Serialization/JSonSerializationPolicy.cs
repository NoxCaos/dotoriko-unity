// JSonSerializationPolicy.cs
//
//  Author:
//       Roman Feshchenko <roman.feshchenko@meliorgames.com>
//  Created:
//      08/14/2015
//
//  Copyright (c) 2015 
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.IO;
using FullSerializer;

namespace DotOriko.Data.Serialization
{
	public sealed class JSonSerializationPolicy : SerializationPolicy
	{
		private static readonly fsSerializer _serializer = new fsSerializer();

		public JSonSerializationPolicy()
		{
		}
		
		public override string FileExtention
		{
			get 
			{
				return "json";
			}
		}
		
		public override T Restore<T> (Stream stream)
		{
			string jsonSource = string.Empty;
            UnityEngine.Debug.Log("Restoring");

			using(StreamReader sr = new StreamReader(stream))
			{
				jsonSource = sr.ReadToEnd();
			}

			return JSonSerializer.Deserialize<T>(jsonSource);
		}
		
		public override void Store<T> (T item, Stream stream)
		{
			fsData data;
			_serializer.TrySerialize(typeof(T), item, out data).AssertSuccess();

			using(StreamWriter sr = new StreamWriter(stream))
			{
				fsJsonPrinter.CompressedJson(data, sr);
			}
		}
	}
}

